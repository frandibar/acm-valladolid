
/* @JUDGE_ID:  40922FK  10024  C++  */
    
/******************************************************************************
 Solution to Problem 10024 - Curling up the cube
 by: Francisco Dibar
 date: Jun-03-2004
******************************************************************************/

#include <iostream>
#include <sstream>
#include <fstream>
//#define ONLINE_JUDGE 

#define COLS	6
#define ROWS	6
#define DIM		36		// ROWS*COLS
#define CUBOS	48		// cantidad de distribuciones del cubo en la grilla

using namespace std;

////////////////////////////////////////////////////////////////////////////////
//	PROGRAMA PRINCIPAL
////////////////////////////////////////////////////////////////////////////////

int main(int argc, char *argv[])
{
	// redireccionar la entrada y salida
	#ifndef ONLINE_JUDGE 
		cin.rdbuf((new ifstream("input.txt"))->rdbuf()); 
		cout.rdbuf((new ofstream("output.txt"))->rdbuf()); 
	#endif 

string vec_sz_cubos[CUBOS] = {
							"010000010000111000010000000000000000","001000111100001000000000000000000000","010000111000010000010000000000000000","010000111100010000000000000000000000",
							"001000001000011100001000000000000000","000000001000111100001000000000000000","001000011100001000001000000000000000","000000010000111100010000000000000000",
							"000100000100001110000100000000000000","000000000000001000111100001000000000","000100001110000100000100000000000000","000000000000010000111100010000000000",
							"000010000010000111000010000000000000","000000000000000000001000111100001000","000010000111000010000010000000000000","000000000000000000010000111100010000",
							"000000010000010000111000010000000000","000100011110000100000000000000000000","000000010000111000010000010000000000","001000011110001000000000000000000000",
							"000000001000001000011100001000000000","000000000100011110000100000000000000","000000001000011100001000001000000000","000000001000011110001000000000000000",
							"000000000100000100001110000100000000","000000000000000100011110000100000000","000000000100001110000100000100000000","000000000000001000011110001000000000",
							"000000000010000010000111000010000000","000000000000000000000100011110000100","000000000010000111000010000010000000","000000000000000000001000011110001000",
							"000000000000010000010000111000010000","000010001111000010000000000000000000","000000000000010000111000010000010000","000100001111000100000000000000000000",
							"000000000000001000001000011100001000","000000000010001111000010000000000000","000000000000001000011100001000001000","000000000100001111000100000000000000",
							"000000000000000100000100001110000100","000000000000000010001111000010000000","000000000000000100001110000100000100","000000000000000100001111000100000000",
							"000000000000000010000010000111000010","000000000000000000000010001111000010","000000000000000010000111000010000010","000000000000000000000100001111000100",
							};

ostringstream os_output;
	int bloques;
	cin >> bloques;

	for (int i = 0; (i < bloques) && (!cin.eof()); i++) {
		string sz_mapa;
		// leer el mapa
		for (int j = 0; j < DIM; j++)
			cin >> sz_mapa[j];
		
		// buscar el mapa en vec_sz_cubos
		bool encontrado = false;
		for (int k = 0; k < CUBOS && !encontrado; k++) {
			string s( vec_sz_cubos[k]);
			// REVISAR!! tira error
		cout << s << endl;
			//if (s == sz_mapa) encontrado = true;
		if (s.compare(sz_mapa)==0) encontrado = true;
		}
		if (encontrado)
			os_output << "correct" << endl;
		else
			os_output << "incorrect" << endl;
		
		if (i < bloques - 1) os_output << endl;	// evitar ultima linea de mas
	}

	cout << os_output.str();
	return 0;
}


