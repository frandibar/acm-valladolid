%!PS-Adobe-2.0
%%Creator: dvipsk 5.58a Copyright 1986, 1994 Radical Eye Software
%%Title: volume2b.dvi
%%Pages: 2
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSCommandLine: dvips -op214.ps -pp38-39 volume2b
%DVIPSParameters: dpi=300, compressed, comments removed
%DVIPSSource:  TeX output 1997.07.28:1129
%%BeginProcSet: texc.pro
/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR[matrix currentmatrix{dup dup round sub abs 0.00001 lt{round}if}
forall round exch round exch]setmatrix}N /@landscape{/isls true N}B
/@manualfeed{statusdict /manualfeed true put}B /@copies{/#copies X}B
/FMat[1 0 0 -1 0 0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{
/nn 8 dict N nn begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N
string /base X array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N
end dup{/foo setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{
/sf 1 N /fntrx FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]
N df-tail}B /E{pop nn dup definefont setfont}B /ch-width{ch-data dup
length 5 sub get}B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{
128 ch-data dup length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub
get 127 sub}B /ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data
dup type /stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N
/rc 0 N /gp 0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup
/base get 2 index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx
0 ch-xoff ch-yoff ch-height sub ch-xoff ch-width add ch-yoff
setcachedevice ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff
.1 sub]/id ch-image N /rw ch-width 7 add 8 idiv string N /rc 0 N /gp 0 N
/cp 0 N{rc 0 ne{rc 1 sub /rc X rw}{G}ifelse}imagemask restore}B /G{{id
gp get /gp gp 1 add N dup 18 mod S 18 idiv pl S get exec}loop}B /adv{cp
add /cp X}B /chg{rw cp id gp 4 index getinterval putinterval dup gp add
/gp X adv}B /nd{/cp 0 N rw exit}B /lsh{rw cp 2 copy get dup 0 eq{pop 1}{
dup 255 eq{pop 254}{dup dup add 255 and S 1 and or}ifelse}ifelse put 1
adv}B /rsh{rw cp 2 copy get dup 0 eq{pop 128}{dup 255 eq{pop 127}{dup 2
idiv S 128 and or}ifelse}ifelse put 1 adv}B /clr{rw cp 2 index string
putinterval adv}B /set{rw cp fillstr 0 4 index getinterval putinterval
adv}B /fillstr 18 string 0 1 17{2 copy 255 put pop}for N /pl[{adv 1 chg}
{adv 1 chg nd}{1 add chg}{1 add chg nd}{adv lsh}{adv lsh nd}{adv rsh}{
adv rsh nd}{1 add adv}{/rc X nd}{1 add set}{1 add clr}{adv 2 chg}{adv 2
chg nd}{pop nd}]dup{bind pop}forall N /D{/cc X dup type /stringtype ne{]
}if nn /base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup
length 1 sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{
cc 1 add D}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin
0 0 moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul
add .99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore userdict
/eop-hook known{eop-hook}if showpage}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale rulex ruley false
RMat{BDot}imagemask grestore}}{{gsave TR -.1 .1 TR rulex ruley scale 1 1
false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave newpath transform
round exch round exch itransform moveto rulex 0 rlineto 0 ruley neg
rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta 0 N /tail
{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}B /c{-4 M}
B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{3 M}B /k{
4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p -1 w}B /q{
p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{3 2 roll p
a}B /bos{/SS save N}B /eos{SS restore}B end
%%EndProcSet
%%BeginProcSet: special.pro
TeXDict begin /SDict 200 dict N SDict begin /@SpecialDefaults{/hs 612 N
/vs 792 N /ho 0 N /vo 0 N /hsc 1 N /vsc 1 N /ang 0 N /CLIP 0 N /rwiSeen
false N /rhiSeen false N /letter{}N /note{}N /a4{}N /legal{}N}B
/@scaleunit 100 N /@hscale{@scaleunit div /hsc X}B /@vscale{@scaleunit
div /vsc X}B /@hsize{/hs X /CLIP 1 N}B /@vsize{/vs X /CLIP 1 N}B /@clip{
/CLIP 2 N}B /@hoffset{/ho X}B /@voffset{/vo X}B /@angle{/ang X}B /@rwi{
10 div /rwi X /rwiSeen true N}B /@rhi{10 div /rhi X /rhiSeen true N}B
/@llx{/llx X}B /@lly{/lly X}B /@urx{/urx X}B /@ury{/ury X}B /magscale
true def end /@MacSetUp{userdict /md known{userdict /md get type
/dicttype eq{userdict begin md length 10 add md maxlength ge{/md md dup
length 20 add dict copy def}if end md begin /letter{}N /note{}N /legal{}
N /od{txpose 1 0 mtx defaultmatrix dtransform S atan/pa X newpath
clippath mark{transform{itransform moveto}}{transform{itransform lineto}
}{6 -2 roll transform 6 -2 roll transform 6 -2 roll transform{
itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll curveto}}{{
closepath}}pathforall newpath counttomark array astore /gc xdf pop ct 39
0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}if}N
/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1 -1
scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3 get
ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip yflip
not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub neg 0
TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{noflips{TR
pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop 90 rotate 1
-1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg
TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr 1 get neg
sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr 2 get ppr
0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4 -1 roll add
2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S TR}if}N /cp
{pop pop showpage pm restore}N end}if}if}N /normalscale{Resolution 72
div VResolution 72 div neg scale magscale{DVImag dup scale}if 0 setgray}
N /psfts{S 65781.76 div N}N /startTexFig{/psf$SavedState save N userdict
maxlength dict begin /magscale true def normalscale currentpoint TR
/psf$ury psfts /psf$urx psfts /psf$lly psfts /psf$llx psfts /psf$y psfts
/psf$x psfts currentpoint /psf$cy X /psf$cx X /psf$sx psf$x psf$urx
psf$llx sub div N /psf$sy psf$y psf$ury psf$lly sub div N psf$sx psf$sy
scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub TR
/showpage{}N /erasepage{}N /copypage{}N /p 3 def @MacSetUp}N /doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N /endTexFig{end psf$SavedState restore}N /@beginspecial{SDict
begin /SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count /ocount X /dcount countdictstack N}N /@setspecial
{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if /showpage{}N /erasepage{}N /copypage{}N newpath
}N /@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{
end}repeat grestore SpecialSave restore end}N /@defspecial{SDict begin}
N /@fedspecial{end}B /li{lineto}B /rl{rlineto}B /rc{rcurveto}B /np{
/SaveX currentpoint /SaveY X N 1 setlinecap newpath}N /st{stroke SaveX
SaveY moveto}N /fil{fill SaveX SaveY moveto}N /ellipse{/endangle X
/startangle X /yrad X /xrad X /savematrix matrix currentmatrix N TR xrad
yrad scale 0 0 1 startangle endangle arc savematrix setmatrix}N end
%%EndProcSet
TeXDict begin 39158280 55380996 1000 300 300 (volume2b.dvi)
@start /Fa 21 111 df<13C01201A3EA03F0EA0FFC487EEA3DCFEA71C738E1C380A213
C7EBC300EAF1C01271123F6C7EEA0FF8EA03FCEA01DE13C7A23861C38012F1A212E113C7
00711300EA7DDEEA3FFC6C5AEA07E0EA01C0A3120011247D9F18>36
D<EA01C0A4EA41C138F1C780EAF9CF383FFE006C5AEA07F0A2EA1FFC487E38F9CF80EAF1
C73841C100EA01C0A411147D9718>42 D<136013F0A7387FFFC0B512E0A26C13C03800F0
00A7136013147E9718>I<387FFFC0B512E0A26C13C013047E8F18>45
D<1303EB0780A2130F14005B131EA2133E133C137C1378A213F85B12015B12035BA21207
5B120F90C7FCA25A121E123E123CA2127C127812F85AA2126011247D9F18>47
D<EA01801203A21207120F123F12FF12FB12431203B0EA7FFCEAFFFEEA7FFC0F1C7B9B18
>49 D<EA03F0EA0FFE487E38380F80387003C0EAE00138F000E0A21260C7FCA2EB01C0A2
EB0380A2EB0700130E133C5B13E0485A485A000FC7FC001E13E01238EA7FFFB5FC7E131C
7E9B18>I<137CEA01FEEA07FF380F8780381E03C0EA1C1DEA387F3878FFE0EA70E3EA71
C112E1EAE380A638E1C1C012713870E380EA78FF38387F00EA1C1C001EC7FC380F81E0EA
07FF0001138038007E00131C7E9B18>64 D<137013F8A213D8A2EA01DCA3138CEA038EA4
EA0707A5380FFF80A3EA0E03381C01C0A3387F07F000FF13F8007F13F0151C7F9B18>I<
EA7FFCB5FC6C1380381C03C01301EB00E0A4130114C01307381FFF80140014C0EA1C03EB
00E014F01470A414F014E01303387FFFC0B51280387FFE00141C7F9B18>I<EBF8603803
FEE0EA07FFEA0F87EA1E01123CEA38005AA214005AA8127014E0A27EEA3C01001E13C038
0F83803807FF006C5AEA00F8131C7E9B18>I<EA7FF8EAFFFE6C7E381C0F80EB03C0A2EB
01E01300A214F01470A814F014E0A2130114C01303EB0F80387FFF00485AEA7FF8141C7F
9B18>I<B512F0A3381C0070A41400A2130EA3EA1FFEA3EA1C0EA390C7FCA21438A5B512
F8A3151C7F9B18>I<B512F8A3381C0038A41400A21307A3EA1FFFA3EA1C07A390C7FCA7
B47E7F5B151C7F9B18>I<3801F0C0EA03FDEA07FFEA0F07EA1C03123CEA38011270A290
C7FC5AA5EB0FF0131F130F387001C0A3EA3803A2EA1C07EA0F0FEA07FFEA03FDEA01F114
1C7E9B18>I<387F07F038FF8FF8387F07F0381C01C0A9EA1FFFA3EA1C01AA387F07F038
FF8FF8387F07F0151C7F9B18>I<EAFFC0A3001CC7FCB1144014E0A4B5FCA3131C7E9B18>
76 D<387E07F038FF0FF8387F07F0381D81C0A313C1121CA213E1A21361A21371A21331
A21339A21319A2131D130DA3EA7F07EAFF87EA7F03151C7F9B18>78
D<3807F0C0EA0FFDEA3FFFEA7C0FEA7003EAE001A390C7FC12701278123FEA1FF0EA07FE
C67EEB0F80EB03C01301EB00E0A2126012E0130100F013C038FC0780B512005BEAC3F813
1C7E9B18>83 D<387FFFF8B5FCA238E07038A400001300B2EA03FE487E6C5A151C7F9B18
>I<EA7E3F38FE7F80387EFFC0EA0FC1EB00E0A2120EAB387FC7FC38FFE7FE387FC7FC17
14809318>110 D E /Fb 13 118 df<B51280A23807F000B3ACB51280A211227EA115>
73 D<EB07FC90383FFF809038FC07E03903F001F848486C7E4848137E48487FA248C7EA
1F80A24815C0007E140FA200FE15E0A9007E15C0007F141FA26C15806D133F001F15006C
6C137E6C6C5B6C6C485A3900FC07E090383FFF80D907FCC7FC23227DA12A>79
D<3801FE023807FF86381F01FE383C007E007C131E0078130EA200F81306A27E1400B4FC
13E06CB4FC14C06C13F06C13F86C13FC000313FEEA003F1303EB007F143FA200C0131FA3
6C131EA26C133C12FCB413F838C7FFE00080138018227DA11F>83
D<EA0FFC383FFF80387E07C0EB03E0130114F0123C1200A2133FEA03FDEA1FC1EA3F0112
7E12FCA4EA7E02EB0CF8381FF87F3807E03F18167E951B>97 D<13FE3807FF80380F87C0
381E01E0003E13F0EA7C0014F812FCA2B5FCA200FCC7FCA3127CA2127E003E13186C1330
380FC0703803FFC0C6130015167E951A>101 D<121C123FA25A7EA2121CC7FCA7B4FCA2
121FB2EAFFE0A20B247EA310>105 D<B4FCA2121FB3ADEAFFE0A20B237EA210>108
D<3AFF07F007F090391FFC1FFC3A1F303E303E01401340496C487EA201001300AE3BFFE0
FFE0FFE0A22B167E9530>I<38FF07E0EB1FF8381F307CEB403CEB803EA21300AE39FFE1
FFC0A21A167E951F>I<13FE3807FFC0380F83E0381E00F0003E13F848137CA300FC137E
A7007C137CA26C13F8381F01F0380F83E03807FFC03800FE0017167E951C>I<38FF0FE0
EB3FF8381FE07CEB803E497E1580A2EC0FC0A8EC1F80A29038803F00EBC03EEBE0FCEB3F
F8EB0FC090C8FCA8EAFFE0A21A207E951F>I<487EA41203A21207A2120F123FB5FCA2EA
0F80ABEB8180A5EB8300EA07C3EA03FEEA00F811207F9F16>116
D<38FF01FEA2381F003EAF147E14FE380F81BE3907FF3FC0EA01FC1A167E951F>I
E /Fc 53 122 df<EB3F80EBE04038038060380700F01206120E1400A6B512F0380E0070
B2387FC3FE1720809F19>12 D<EA7038EAF87CEAFC7EA2EA743AEA0402A3EA0804A2EA10
08A2EA2010EA40200F0E7F9F17>34 D<13401380EA01005A12061204120C5AA212381230
A212701260A412E0AC1260A412701230A212381218A27E120412067E7EEA008013400A2E
7BA112>40 D<7E12407E12307E1208120C7EA212077EA213801201A413C0AC1380A41203
1300A25A1206A25A120812185A12205A5A0A2E7EA112>I<127012F012F8A212781208A3
1210A31220A21240050E7C840D>44 D<EAFFF0A20C02808A0F>I<127012F8A312700505
7C840D>I<13801203120F12F31203B3A6EA07C0EA7FFE0F1E7C9D17>49
D<EA03F0EA0C1CEA100E487E00401380EA800300F013C012F8A312201200EB0780A2EB0F
00130E5B5B13305B5B485A48C7FC000613405A1208481380EA3FFF5AB5FC121E7E9D17>
I<EA03F0EA0C1CEA100E487E00781380A31238120014005B130E5B1330EA07F0EA001C7F
7F1480130314C0122012F8A300F01380EA40071400EA300EEA0C1CEA03F0121F7E9D17>
I<1306A2130EA2131E132EA2134E138EA2EA010E1202A212041208A212101220A2124012
C0B512F038000E00A7EBFFE0141E7F9D17>I<EA1803EA1FFE5B13F00010C7FCA7EA11F0
EA161CEA180EEA10071480EA0003A214C0A3127012F0A200E013801240EB0700EA20066C
5AEA0838EA07E0121F7E9D17>I<137CEA0182EA0701380E0380EA0C0712183838030090
C7FC12781270A2EAF1F0EAF21CEAF406EAF807EB0380A200F013C0A51270A214801238EB
07001218EA0C0E6C5AEA01F0121F7E9D17>I<127012F8A312701200AA127012F8A31270
05147C930D>58 D<5B497EA3497EA3EB09E0A3EB10F0A3EB2078A2EB607CEB403CA2EB80
3E141EA248B5FCEB000FA20002EB0780A348EB03C0A2120C001E14E039FF801FFE1F207F
9F22>65 D<B512E0380F0038141E140E801580A515005C141E5CEBFFF0EB003C140FEC07
80EC03C0A2EC01E0A515C01403EC0780EC0F00143EB512F01B1F7E9E20>I<90380FE010
9038781C30EBC002390380017048C712F0000E14705A15305A15101278127000F01400A9
1270007814101238A26C1420A26C14407E6C6C13803900C00300EB780CEB0FF01C217E9F
21>I<B512E0380F0038140E80EC0380EC01C0A2EC00E0A215F015701578A91570A215F0
15E0140115C0EC0380EC0700140E1438B512E01D1F7E9E22>I<B61280380F000F140314
01140015C01540A314401500A214C0130113FF130113001440A3EC0020A31540A315C014
01EC0380140FB6FC1B1F7E9E1F>I<B512FE380F001E1406A2140214031401A41480A413
0113FF13011300A41400A87FEAFFF8181F7E9E1D>I<EAFFF0EA0F00B3ABEAFFF00C1F7E
9E10>73 D<EAFFF8EA0F8090C7FCB21402A414061404A2140C141C147CB512FC171F7E9E
1C>76 D<B46CEB1FF0000F1500A2D80BC0132FA2D809E0134FA3D808F0138FA390387801
0FA2EB3C02A3EB1E04A3EB0F08A3EB0790A2EB03E0A3EB01C0A2123E3AFF8080FFF0241F
7E9E29>I<B4EB0FF8390F8003E09038C00080120BEA09E07F12081378137C133C7F131F
7FEB078014C01303EB01E014F013001478147C143C141E141F140F1407A214031401123E
38FF80001D1F7E9E22>I<EB1FE0EB70383801C00E48487E3907000380000EEB01C048EB
00E0003C14F00038147000781478A20070143800F0143CA900781478A300381470003C14
F0001C14E06CEB01C06CEB038039038007003801C00E38007038EB1FE01E217E9F23>I<
3803F040380C0CC0EA1802EA3001EA7000126012E01440A36C13007E127CEA7F80EA3FF8
6CB4FC00071380C613C0EB1FE013031301EB00F014707EA46C136014E06C13C038D80180
38C60700EA81FC14217E9F19>83 D<007FB512E038780F010060EB006000401420A200C0
143000801410A400001400B3497E3803FFFC1C1F7E9E21>I<39FFE001FF391F8000786C
C712706C6C13606D1340000314807F3901F001001200EBF802EB7C06EB3C04EB3E08131E
EB1F10EB0F90EB07A014E06D5AACEB3FFC201F7F9E22>89 D<EA0804EA1008EA2010A2EA
4020A2EA8040A3EAB85CEAFC7EA2EA7C3EEA381C0F0E7A9F17>92
D<EA1FE0EA3030EA7818131CEA300E1200A313FEEA078EEA1E0E1238127800F01310A313
1E127838386720380F83C014147E9317>97 D<121C12FC121CAA137CEA1D87381E0180EB
00C0001C13E01470A21478A6147014F014E0001E13C0381A018038198700EA107C15207E
9F19>I<EA01FCEA0706EA1C0F123813060078C7FC127012F0A61270127800381380A238
1C0100EA0706EA01F811147F9314>I<EB01C0130F1301AAEA01F1EA070DEA0C03EA1801
12381278127012F0A61270A21238EA1803120CEA070D3801F1F815207F9F19>I<EA03F0
EA0E1C487E487EA21270EB038012F0A2B5FC00F0C7FCA31270A26C1380A2381C0100EA07
06EA01F811147F9314>I<137CEA01C6EA030F1207EA0E061300A7EAFFF0EA0E00B2EA7F
E01020809F0E>I<14E03803E330EA0E3CEA1C1C38380E00EA780FA5EA380E6C5AEA1E38
EA33E00020C7FCA21230A2EA3FFE381FFF8014C0383001E038600070481330A400601360
6C13C0381C03803803FC00141F7F9417>I<121C12FC121CAA137C1386EA1D03001E1380
A2121CAE38FF8FF014207E9F19>I<1218123C127C123C1218C7FCA6121C12FC121CB1EA
FF80091F7F9E0C>I<121C12FC121CAAEB1FE0EB0780EB060013045B5B5B136013E0EA1D
F0EA1E70EA1C38133C131C7F130F7F148014C038FF9FF014207E9F18>107
D<121C12FC121CB3ABEAFF8009207F9F0C>I<391C3E03E039FCC30C30391D039038391E
01E01CA2001C13C0AE3AFF8FF8FF8021147E9326>I<EA1C7CEAFC86EA1D03001E1380A2
121CAE38FF8FF014147E9319>I<EA01F8EA070E381C0380383801C0A2387000E0A200F0
13F0A6007013E0A2383801C0A2381C038038070E00EA01F814147F9317>I<EA1C7CEAFD
87381E018014C0381C00E014F014701478A6147014F014E0381E01C0EB0380381D8700EA
1C7C90C7FCA8B47E151D7E9319>I<3801F04038070CC0EA0E02EA1C03EA380112781270
12F0A6127012781238EA1C03EA0C05EA0709EA01F1EA0001A8EB0FF8151D7F9318>I<EA
1CF0EAFD18EA1E3CA21318EA1C00AEEAFFC00E147E9312>I<EA0FC8EA3038EA6018EAC0
08A3EAE000127CEA3FE0EA1FF0EA07F8EA003CEA800E130612C0A21304EAE00CEAD818EA
87E00F147F9312>I<1202A31206A2120EA2123EEAFFF8EA0E00AB1304A5EA07081203EA
01F00E1C7F9B12>I<381C0380EAFC1FEA1C03AE1307120CEA061B3803E3F014147E9319>
I<38FF83F8383E00E0001C13C06C1380A338070100A21383EA0382A2EA01C4A213E4EA00
E8A21370A3132015147F9318>I<39FF9FE1FC393C078070D81C0313601520000E144014
C0A2D80704138014E0A239038861001471A23801D032143AEBF03E3800E01CA2EB6018EB
40081E147F9321>I<38FF87F8381E03C0380E0180EB0300EA0702EA0384EA01C813D8EA
00F01370137813F8139CEA010E1202EA060738040380000C13C0003C13E038FE07FC1614
7F9318>I<38FF83F8383E00E0001C13C06C1380A338070100A21383EA0382A2EA01C4A2
13E4EA00E8A21370A31320A25BA3EAF080A200F1C7FC1262123C151D7F9318>I
E /Fd 13 117 df<130C131C137CEA07FC12FF12F81200B3ADB512FCA216277BA621>49
D<EBFF80000713F0380E03F8381800FE48137F127C00FEEB3F807E15C0141FA2127E003C
133FC7FC1580A2EC7F00147E14FE5CEB01F0495A495A5C49C7FC131C5B4913C05B485A39
03800180EA070000061303000FB5FC5A5A481400B6FCA21A277DA621>I<141C143CA214
7C14FC1301A213031307130E130C131813381370136013C01201EA038013001206120E5A
12185A12705AB612F0A2C7EAFC00A990383FFFF0A21C277EA621>52
D<91387FE002903907FFF80690391FE01E0E90397F00039E01FCEB01FE4848EB007ED807
F0143E5B4848141E001F150E485AA21606127F90C8FC16005AA97EA26D1406123FA36C6C
140C120F6C6C14186D1438D801F814306C6C14E0017FEB03C090391FE00F00903807FFFC
9038007FE027297CA830>67 D<91387FE002903907FFF80690391FE01E0E90397F00039E
01FCEB01FE4848EB007ED807F0143E5B4848141E001F150E485AA21606127F90C8FC93C7
FC5AA892B512E07E923800FE007F123FA27F121F120F6C7E7FEA01F86C6C1301017FEB03
BE90391FF00F1E903907FFFC0E9039007FE0022B297CA834>71 D<3803FF80000F13E038
1F01F8383F80FC147EA280EA1F00C7FCA4EB3FFF3801FE3FEA0FE0EA1F80EA3F005A12FE
150CA3145F007F139F393F831FF8391FFE0FF03903F807C01E1B7E9A21>97
D<EC3FF0A21403ADEB3F833801FFF33807F03B380FC00F381F8007383F0003A2127EA312
FEA8127EA27E1407EA1F80380FC01F3807E07B3901FFE3FF38007F83202A7EA925>100
D<EB7F803801FFF03807E0F8380F807C48487E48133F80127E158012FEA2B6FCA248C8FC
A4127EA2127F6CEB0180A2391F800300380FC0063803F01C3801FFF838003FC0191B7E9A
1E>I<120FEA1F8013C0123FA2121F1380EA0F00C7FCA8EAFFC0A2120FB3A5EAFFF8A20D
2B7EAA13>105 D<38FFC0FE9038C3FF80390FC60FC09038C807E0EBD00301F013F013E0
A213C0B139FFFC3FFFA2201B7E9A25>110 D<EB3FC03801FFF83807E07E380F801F001F
1480393F000FC0A2007EEB07E0A300FE14F0A8007E14E0A26CEB0FC0A2391F801F80390F
C03F003807E07E3801FFF838003FC01C1B7E9A21>I<38FF83E0EB8FF8380F8C7CEB98FE
13B013A0A2EBE07CEBC000B1EAFFFEA2171B7E9A1B>114 D<1360A413E0A21201A21203
1207121FB512E0A23807E000AE1430A73803F0603801F8C03800FF80EB3F0014267FA51A
>116 D E /Fe 28 122 df<1306130C13101330136013C013801201EA0300A21206120E
120CA25AA21238A21230A21270A21260A312E0A81260A57EA2121012181208120C12047E
0F2E7AA112>40 D<138013C0134013201330A21318A3130CAD131CA31318A21338A21330
A21370136013E013C0A2EA018013005A120612045A12185A12405A0E2E80A112>I<1408
140C141C143CA2147C147E149EA2EB011EA2EB021F801304A21308A29038100780A21320
A2EB7FFF90384007C0EB8003A2EA01005A000214E000061301A2001E130339FF801FFE1F
207F9F22>65 D<903801FC0290380F038690381800460170132E49131ED80180131C0003
140C48C7FC120E121E121C003C140815005AA45AA41270151015201278123815406C1480
000CEB01006C13023803800C3800E030EB3FC01F217C9F21>67 D<3807FF803800F80013
78A25BA6485AA6485AA6485AA648C7FC7FEAFFF0111F7E9E10>73
D<D807FCECFF800000EDF800017CEB0178A2019EEB02F0A21504A21508138FD8010FEB11
E01521A21541EB078015810002EC83C0EC8103A2EB03C2A214C400044A5A14C8EB01F0A2
14E0A2000C4948C7FCD81E00803AFF8080FFF0291F7E9E29>77 D<D807F8EB7FC0D8007C
EB1F00150C015E1304019E5B138FA2EB8780A2EB83C0D801035BEB01E0A2EB00F0A21478
00025C143CA2141EA2140F485CEC07C0A21403A21401000C5C001E1300B47E221F7E9E22
>I<0007B5FC3900F801C090387800F01578491338153CA41578485A157015E0EC01C0EC
0700EBFFFCD803C0C7FCA6485AA648C8FC7FEAFFF01E1F7E9E1F>80
D<EB1F82EB7066EBC0163801800EEA030048130C00061304120EA3000F1300A27FEA07F0
13FF6C13C06C13E038003FF0EB03F813001478143CA200401338A3143000601370146000
F013C038C8018038C60700EA81FC17217E9F19>83 D<39FFF00FF8391F0003E06CEB0180
1400001EEB0100A6481302A6485BA600705BA25CA200785B1238001813C06C48C7FCEA07
06EA01F81D20799E22>85 D<39FFE001FE001FC712786C14601540A215807F0007EB0100
A21402A26D5A0003130C14085CA26D5A12015CA26D5A120001F1C7FC13F313F213FC137C
1378A21370A213201F207A9E22>I<EA07F8EA0C0CEA1E061307121C1200A313FFEA07C7
EA1E07EA3C0E127800F01310A3131EEB2E2038784F40381F878014147D9317>97
D<1207123F120F7EA2120EA65A137CEA1D83381E0180001C13C0EB00E05A14F0A5387001
E0A214C013031480EB0700EAE80EEACC38EA83E014207B9F19>I<13FEEA0383380E0780
121C0038130090C7FC12785AA45AA37E5BEA70026C5AEA1C18EA07E011147D9314>I<14
38EB01F8EB00781438A21470A614E013FCEA0382EA0601121CEA3C00383801C0127812F0
A438E00380A412F0EA700738380F00381C37803807C7E015207D9F19>I<13F8EA070EEA
0E07121C383803801278127012F0A2B5FC00F0C7FC5AA46C5AEA7002EA3004EA1C18EA07
E011147D9314>I<EB07C0EB1C60EB30F01360EBE0E0EBC0001201A5485AEA3FFCEA0380
A448C7FCA6120EA65A121EEAFFC014207F9F0E>I<13E0120712011200A2485AA6485AEB
8F80EB90E013A0EBC0601380000713E01300A5380E01C0A6381C0380001E13C038FF8FF0
14207E9F19>104 D<13C0EA01E01203A2EA01C0C7FCA6EA0380121F12071203A2EA0700
A6120EA65A121EEAFF800B1F7F9E0C>I<13E0120712011200A2EA01C0A6EA0380A6EA07
00A6120EA65A121EEAFF800B207F9F0C>108 D<390387C07C391F9861863907A0720739
03C03403EB80380007EB7807EB0070A5000EEBE00EA64848485A001EEBE01E3AFFCFFCFF
C022147E9326>I<38038F80381F90E0EA07A03803C0601380000713E01300A5380E01C0
A6381C0380001E13C038FF8FF014147E9319>I<13FCEA0387380E0180381C00C04813E0
A24813F012F0A438E001E0A214C0130300F0138038700700EA380E6C5AEA07E014147D93
17>I<EA038E381FB380EA07C71203EB8300EA078090C7FCA5120EA65A121EEAFFC01114
7E9312>114 D<EA01F9EA0607EA080312181301EA38021300121F13F0EA07FCEA01FEEA
001FEA40071303A212601306EAF004EAC818EA87E010147F9312>I<1380EA0100A35A5A
5A121EEAFFF8EA0E00A45AA65A1310A41320A2EA1840EA0F800D1C7C9B12>I<38FF83F8
381E00E0001C13C01480121E380E01005B13025B12075BA25BEA039013A013E05B5B1201
90C7FC15147C9318>118 D<390FF83F803901E00E00EBC00C140813E000005B14301420
5C13705CA20171C7FC1339133A133E133C133813181310A25BA25BEA70C0EAF08000F1C8
FC12E61278191D809318>121 D E end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 300dpi
TeXDict begin
%%PaperSize: a4
%%BeginPaperSize: a4
a4
%%EndPaperSize

%%EndSetup
%%Page: 38 1
38 0 bop -21 50 a Fe(A)o(CM)14 b(Con)o(t)o(e)q(st)f(Problems)g(Arc)o
(hiv)o(e)746 b(Univ)o(ers)q(it)o(y)13 b(of)i(V)l(alladolid)g(\(SP)l
(AIN\))-21 199 y Fd(214)66 b(Co)r(d)o(e)21 b(Gen)n(era)n(t)n(ion)-21
301 y Fc(Y)l(our)15 b(emplo)o(y)o(er)f(needs)i(a)f(bac)o(k)o(end)g(for)
f(a)i(translator)d(for)h(a)h(v)o(ery)g(SIC)h(mac)o(hine)f
(\(Simpli\014ed)h(Instructional)f(Com-)-21 357 y(puter,)f(ap)q(ologies)
h(to)f(Leland)h(Bec)o(k\).)20 b(Input)15 b(to)f(the)h(translator)d
(will)17 b(b)q(e)e(arithmetic)f(expressions)g(in)i(p)q(ost\014x)e(form)
-21 414 y(and)h(the)f(output)g(will)i(b)q(e)f(assem)o(bly)f(language)f
(co)q(de.)50 495 y(The)i(target)e(mac)o(hine)h(has)h(a)g(single)h
(register)d(and)i(the)g(follo)o(wing)g(instructions,)e(where)i(the)g
(op)q(erand)f(is)i(either)-21 551 y(an)f(iden)o(ti\014er)g(or)f(a)g
(storage)f(lo)q(cation.)122 658 y(L)91 b(load)14 b(the)h(op)q(erand)e
(in)o(to)i(the)f(register)122 714 y(A)85 b(add)14 b(the)h(op)q(erand)e
(to)h(the)h(con)o(ten)o(ts)e(of)h(the)h(register)122
771 y(S)94 b(subtract)12 b(the)j(op)q(erand)f(from)f(the)i(con)o(ten)o
(ts)d(of)j(the)f(register)122 827 y(M)78 b(m)o(ultiply)15
b(the)f(con)o(ten)o(ts)f(of)h(the)h(register)e(b)o(y)i(the)f(op)q
(erand)122 884 y(D)85 b(divide)15 b(the)g(con)o(ten)o(ts)e(of)h(the)h
(register)e(b)o(y)h(the)h(op)q(erand)122 940 y(N)85 b(negate)13
b(the)i(con)o(ten)o(ts)e(of)h(the)g(register)122 996
y(ST)61 b(store)13 b(the)h(con)o(ten)o(ts)f(of)i(the)f(register)f(in)j
(the)e(op)q(erand)g(lo)q(cation)50 1103 y(An)h(arithmetic)e(op)q
(eration)g(replaces)i(the)f(con)o(ten)o(ts)f(of)h(the)h(register)e
(with)i(the)f(expression)g(result.)19 b(T)l(emp)q(orary)-21
1159 y(storage)10 b(lo)q(cations)i(are)f(allo)q(cated)h(b)o(y)g(the)g
(assem)o(bler)f(for)g(an)h(op)q(erand)f(of)h(the)g(form)f(\\)p
Fa($)o(n)p Fc(")h(where)f Fa(n)h Fc(is)h(a)f(single)h(digit.)-21
1281 y Fb(Inpu)o(t)-21 1367 y Fc(The)20 b(input)g(\014le)h(consists)e
(of)h(sev)o(eral)f(legitimate)g(p)q(ost\014x)g(expressions,)h(eac)o(h)f
(on)h(a)g(separate)e(line.)36 b(Expression)-21 1423 y(op)q(erands)18
b(are)g(single)h(letters)f(and)h(op)q(erators)d(are)i(the)g(normal)g
(arithmetic)g(op)q(erators)e(\()p Fa(+)p Fc(,)i Fa(-)p
Fc(,)i Fa(*)p Fc(,)f Fa(/)p Fc(\))f(and)g(unary)-21 1480
y(negation)c(\()p Fa(@)p Fc(\).)-21 1601 y Fb(Ou)o(t)o(pu)o(t)-21
1687 y Fc(Output)g(m)o(ust)g(b)q(e)h(assem)o(bly)f(language)f(co)q(de)i
(that)f(meets)f(the)i(follo)o(wing)f(requiremen)o(ts:)34
1793 y(1.)22 b(One)c(instruction)f(p)q(er)h(line)h(with)e(the)h
(instruction)f(mnemonic)g(separated)f(from)g(the)i(op)q(erand)e(\(if)i
(an)o(y\))f(b)o(y)92 1850 y(one)d(blank.)34 1944 y(2.)22
b(One)15 b(blank)g(line)h(m)o(ust)d(separate)g(the)i(assem)o(bly)e(co)q
(de)i(for)f(successiv)o(e)g(expressions.)34 2037 y(3.)22
b(The)14 b(original)h(order)e(of)i(the)f(op)q(erands)g(m)o(ust)f(b)q(e)
j(preserv)o(ed)d(in)j(the)e(assem)o(bly)g(co)q(de.)34
2131 y(4.)22 b(Assem)o(bly)14 b(co)q(de)g(m)o(ust)g(b)q(e)h(generated)e
(for)h(eac)o(h)g(op)q(erator)f(as)h(so)q(on)g(as)g(it)h(is)h(encoun)o
(tered.)34 2225 y(5.)22 b(As)14 b(few)h(temp)q(oraries)d(as)i(p)q
(ossible)i(should)f(b)q(e)g(used)g(\(giv)o(en)f(the)g(ab)q(o)o(v)o(e)g
(restrictions\).)34 2319 y(6.)22 b(F)l(or)12 b(eac)o(h)f(op)q(erator)f
(in)i(the)g(expression,)f(the)h(minim)o(um)f(n)o(um)o(b)q(er)g(of)h
(instructions)f(m)o(ust)f(b)q(e)j(generated)d(\(giv)o(en)92
2375 y(the)k(ab)q(o)o(v)o(e)g(restrictions\).)-21 2497
y Fb(Samp)o(le)k(inpu)o(t)-21 2583 y Fa(AB+CD+EF++)o(GH+)o(++)-21
2639 y(AB+CD+-)p eop
%%Page: 39 2
39 1 bop -21 50 a Fe(A)o(CM)14 b(Con)o(t)o(e)q(st)f(Problems)g(Arc)o
(hiv)o(e)746 b(Univ)o(ers)q(it)o(y)13 b(of)i(V)l(alladolid)g(\(SP)l
(AIN\))-21 199 y Fb(Samp)o(le)j(ou)o(t)o(pu)o(t)-21 285
y Fa(L)23 b(A)-21 342 y(A)g(B)-21 398 y(ST)g($1)-21 454
y(L)g(C)-21 511 y(A)g(D)-21 567 y(ST)g($2)-21 624 y(L)g(E)-21
680 y(A)g(F)-21 737 y(A)g($2)-21 793 y(ST)g($2)-21 850
y(L)g(G)-21 906 y(A)g(H)-21 963 y(A)g($2)-21 1019 y(A)g($1)-21
1132 y(L)g(A)-21 1188 y(A)g(B)-21 1245 y(ST)g($1)-21
1301 y(L)g(C)-21 1358 y(A)g(D)-21 1414 y(N)-21 1471 y(A)g($1)p
eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
